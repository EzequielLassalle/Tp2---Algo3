@startuml

abstract Defensa {
    - Boolean operativa
    - int tiempoDeConstruccion
    - int tiempoConstruyendose
    - Rango rango
    - Credito costo
    - int x
    - int y
    - int danio

    + void pagar(Jugador unJugador)
    + {abstract} Credito atacar(Casillero unCasillero)
    + void ralentizar()
    + void sumarTurno()
}

class TorreBlanca {
    - Boolean operativa
    - int tiempoDeConstruccion
    - int tiempoConstruyendose
    - Rango rango
    - Credito costo
    - int x
    - int y
    - int danio

    + TorreBlanca(int unX, int unY)
    + Credito atacar(Casillero unCasillero)
}

class TorrePlateada {
    - Boolean operativa
    - int tiempoDeConstruccion
    - int tiempoConstruyendose
    - Rango rango
    - Credito costo
    - int x
    - int y
    - int danio

    + TorrePlateada(int unX, int unY)
    + Credito atacar(Casillero unCasillero)
}

class TrampaArenosa {
    - Boolean operativa
    - Credito costo
    - int x
    - int y

    + TrampaArenosa(int unX, int unY)
    + atacar(Casillero unCasillero)
    + void sumarTurno()
    + void actualizarVidaUtil()
}

abstract Rango {
    + {abstract} Boolean calcularRango(Casillero, int x, int y)
}

class RangoTorreBlanca {
    + Boolean calcularRango(Casillero, int x, int y)
}

class RangoTorrePlateada {
    + Boolean calcularRango(Casillero, int x, int y)
}

Defensa <|-- TorreBlanca
Defensa <|-- TorrePlateada
Defensa <|-- TrampaArenosa

Rango <|-- RangoTorreBlanca
Rango <|-- RangoTorrePlateada

TorreBlanca *-- RangoTorreBlanca
TorrePlateada *-- RangoTorrePlateada

@enduml